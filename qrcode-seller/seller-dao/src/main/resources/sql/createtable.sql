-------------------------------------------------SAAS模块------------------------------------------------------------
--服务目录表
CREATE TABLE IF NOT EXISTS `TB_SERVICE_CATEGORY` (
  `CATEGORY_ID` INT NOT NULL AUTO_INCREMENT COMMENT '服务类目标识\n',
  `PARENT_ID` INT NOT NULL DEFAULT -1 COMMENT '父类目标识, 顶级类目值为-1. 默认为-1.\n\n',
  `NAME` VARCHAR(32) NOT NULL COMMENT '服务类目名称\n',
  `ICON` VARCHAR(128) NULL COMMENT '类目图标',
  `STATUS` VARCHAR(8) NOT NULL COMMENT '状态,0为无效,1为有效',
  `DESCRIPTION` VARCHAR(128) NULL COMMENT '类目描述\n',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`CATEGORY_ID`))
ENGINE = InnoDB
COMMENT = '服务类目\n';

--服务定义
CREATE TABLE IF NOT EXISTS  `TB_SERVICE_DEFINE` (
  `DEFINE_ID` INT NOT NULL AUTO_INCREMENT COMMENT '服务定义标识',
  `NAME` VARCHAR(32) NOT NULL COMMENT '服务名称',
  `ENAME` VARCHAR(32) NOT NULL COMMENT '服务英文名称,　此名称确定了点击服务时的页面',
  `CATEGORY_ID` INT NOT NULL COMMENT '服务所属类目',
  `DESCRIPTION` VARCHAR(128) NULL COMMENT '描述',
  `ICON` VARCHAR(128) NULL COMMENT '图标',
  `STATUS` VARCHAR(8) NOT NULL COMMENT '服务定义: 0为无效,1为有效',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`DEFINE_ID`),
  INDEX `IDX_DEFINE_CATEGORY` (`CATEGORY_ID` ASC),
  CONSTRAINT `fk_TB_SERVICE_DEFINE_TB_SERVICE_CATEGORY1`
    FOREIGN KEY (`CATEGORY_ID`)
    REFERENCES  `TB_SERVICE_CATEGORY` (`CATEGORY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '服务定义,默认页面为http://context/service/servicena'; ---me

--服务版本
CREATE TABLE IF NOT EXISTS `TB_SERVICE_VERSION` (
 `VERSION_ID` INT NOT NULL AUTO_INCREMENT COMMENT '版本标识',
  `DEFINE_ID` INT NOT NULL COMMENT '所属服务',
  `NAME` VARCHAR(32) NULL COMMENT '版本名称',
  `DESCRIPTION` VARCHAR(128) NULL COMMENT '描述',
  `MONTH_PRICE` INT NULL DEFAULT -1 COMMENT '每月价格，单位为元。定义为-1时表示不支持按月购买。',
  `QUARTER_PRICE` INT NULL DEFAULT -1 COMMENT '每季价格，单位为元。定义为-1时表示不支持按季购买。',
  `HALFYEAR_PRICE` INT NULL DEFAULT -1 COMMENT '每半年价格，单位为元。定义为-1时表示不支持按半年购买。',
  `YEAR_PRICE` INT NULL DEFAULT -1 COMMENT '每年价格，单位为元。定义为-1时表示不支持按年购买。',
  `TRIAL_DAYS` INT NULL DEFAULT -1 COMMENT '试用天数，－1时表示不支持试用。最多支持15天试用',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`VERSION_ID`),
  INDEX `IDX_VERSION_DEFINE` (`DEFINE_ID` ASC),
  CONSTRAINT `fk_TB_SERVICE_VERSION_TB_SERVICE_DEFINE1`
    FOREIGN KEY (`DEFINE_ID`)
    REFERENCES `TB_SERVICE_DEFINE` (`DEFINE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '服务版本';

--服务订购
CREATE TABLE IF NOT EXISTS `TB_SERVICE_ORDER` (
  `ORDER_ID` INT NOT NULL AUTO_INCREMENT COMMENT '订单ID\n',
  `DEFINE_ID` INT NOT NULL COMMENT '订购的服务',
  `VERSION_ID` INT NOT NULL COMMENT '订购的版本',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '订购者',
  `ORDER_TIME` TIMESTAMP NOT NULL COMMENT '订购时间',
  `ORDER_DURATION` INT NOT NULL COMMENT '订购期限,以天为单位',
  `PRICE` INT NOT NULL COMMENT '订购的价钱,分为单位',
  `STATUS` VARCHAR(8) NOT NULL COMMENT '状态,1为有效',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`ORDER_ID`),
  INDEX `IDX_ORDER_DEFINE` (`DEFINE_ID` ASC),
  INDEX `IDX_ORDER_VERSION` (`VERSION_ID` ASC),
  INDEX `IDX_ORDER_BUYERNICK` (`SELLER_NICK` ASC),
  CONSTRAINT `fk_TB_SERVCIE_ORDER_TB_SERVICE_DEFINE1`
    FOREIGN KEY (`DEFINE_ID`)
    REFERENCES `TB_SERVICE_DEFINE` (`DEFINE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TB_SERVCIE_ORDER_TB_SERVICE_VERSION1`
    FOREIGN KEY (`VERSION_ID`)
    REFERENCES `TB_SERVICE_VERSION` (`VERSION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '服务订购';


-------------------------------------------------系统模块------------------------------------------------------------
--系统配置表
CREATE TABLE IF NOT EXISTS `TB_SYS_CONFIG` (
  `CONFIG_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '配置ID',
  `NAME` VARCHAR(64) NOT NULL COMMENT '显示名称',
  `CODE` VARCHAR(32) NOT NULL COMMENT '编码',
  `VALUESS` VARCHAR(512) NOT NULL COMMENT '值，单值时直接存储，多值时{key:value, key:value}.如果多值没有key时，统一存字符串。',
  `IS_SINGLE_VALUE` INT NOT NULL COMMENT '是否单值：1为单值，2为多值。默认为1',
  `DATA_TYPE` CHAR(8) NULL COMMENT 'INT, DOUBLE, FLOAT,CHAR',
  `METO` VARCHAR(256) NULL COMMENT '配置描述',
  `HOLD1` VARCHAR(64) NULL COMMENT '备用字段1',
  `HOLD2` VARCHAR(64) NULL COMMENT '备用字段2',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`CONFIG_ID`),
  UNIQUE INDEX `IDX_SYSCONFIG_CODE` (`CODE` ASC))
ENGINE = InnoDB
COMMENT = '系统配置\n';


-------------------------------------------------产品模块------------------------------------------------------------
--产品类目表
CREATE TABLE IF NOT EXISTS  `TB_PRD_CATEGORY` (
  `CATEGORY_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '产品类目标识',
  `CATEGORY_CODE` VARCHAR(32) NOT NULL COMMENT '类目编码, 唯一\n',
  `NAME` VARCHAR(64) NOT NULL COMMENT '类目名称',
  `P_CATEGORY_ID` BIGINT(20) NOT NULL DEFAULT -1 COMMENT '父类目, -1表示没有父节点.默认为-1',
  `IS_LEAF` INT NOT NULL COMMENT '是否页子节点，页子节点才有属性信息。\n1为页子节点。',
  `STATUS` INT NOT NULL DEFAULT 1 COMMENT '状态：0为无效，1为有效，默认为1。',
  `DESCRIPTION` VARCHAR(128) NULL COMMENT '描述\n',
  `HOLD1` VARCHAR(64) NULL COMMENT '备注字段一',
  `CREATE_TIME` TIMESTAMP NULL COMMENT '创建时间',
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '更新时间',
  PRIMARY KEY (`CATEGORY_ID`),
  UNIQUE INDEX `IDX_CATEGORY_CODE` (`CATEGORY_CODE` ASC)  )
ENGINE = InnoDB
COMMENT = '名称:产品类目\n1,只' ;

--产品类目属性组表
CREATE TABLE IF NOT EXISTS `TB_PRD_CATEATTRGROUP` (
  `CATEGORY_ATTRGROUP_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '属性组标识',
  `CATEGORY_ID` BIGINT(20) NOT NULL COMMENT '产品类目',
  `ATTRGROUP_NAME` VARCHAR(64) NOT NULL COMMENT '属性组名称',
  `STATUS` INT NOT NULL DEFAULT 1 COMMENT '状态，0为无效，1为有效. 默认为1\n',
  `DESCRIPTION` VARCHAR(128) NULL COMMENT '描述',
  PRIMARY KEY (`CATEGORY_ATTRGROUP_ID`),
  INDEX `IDX_CATEATTRGROUP_CATEGORYID` (`CATEGORY_ID` ASC) ,
  CONSTRAINT `fk_CATEATTRGROUP_CATEGORY`
    FOREIGN KEY (`CATEGORY_ID`)
    REFERENCES `TB_PRD_CATEGORY` (`CATEGORY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '类目属性组';


--产品类目属性表
CREATE TABLE IF NOT EXISTS  `TB_PRD_CATEGORYATTR` (
  `CATEGORY_ATTR_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '类目属性标识',
  `CATEGORY_ATTRGROUP_ID` BIGINT(20) NOT NULL COMMENT '属性组',
  `ATTR_NAME` VARCHAR(64) NOT NULL COMMENT '属性名称(中文)',
  `ATTR_ENAME` VARCHAR(64) NULL COMMENT '属性名称（英文）',
  `DATA_TYPE` VARCHAR(8) NOT NULL DEFAULT 'STRING' COMMENT '数据类型，NUMBER（数字）, STRING（字符串），DATE（日期）, DIM（维度值），COLOR（颜色）\n默认为字符串。\n',
  `SKU_FLG` INT NOT NULL DEFAULT 0 COMMENT '是否为SKU属性:1表示为SKU。默认为0',
  `MULT_FLG` INT NOT NULL DEFAULT 0 COMMENT '是否多值：0为单值，1为多值。默认为0',
  `MULT_VALUE` VARCHAR(128) NULL COMMENT '当类型为维度值时，表示方法为{n1: v1, n2: v2, n3 : v3}',
  `UNIT` VARCHAR(32) NULL COMMENT '度量单位，例如内存M，G等',
  PRIMARY KEY (`CATEGORY_ATTR_ID`),
  INDEX `IDX_CATEATTRGROUP_GROUPID` (`CATEGORY_ATTRGROUP_ID` ASC) ,
  CONSTRAINT `fk_CATEGORYATTR_CATEATTRGROUP`
    FOREIGN KEY (`CATEGORY_ATTRGROUP_ID`)
    REFERENCES  `TB_PRD_CATEATTRGROUP` (`CATEGORY_ATTRGROUP_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '类目属性定义';

--产品信息
CREATE TABLE IF NOT EXISTS  `TB_PRD_PRODUCT` (
  `PRODUCT_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '产品标识',
  `CATEGORY_ID` BIGINT(20) NOT NULL COMMENT '产品类目\n\n',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '卖家账号',
  `PRD_CODE` VARCHAR(64) NULL COMMENT '产品编码',
  `NAME` VARCHAR(128) NOT NULL COMMENT '产品名称',
  `BRAND` VARCHAR(128) NULL COMMENT '品牌',
  `TITLE` VARCHAR(128) NULL COMMENT '产品促销标题',
  `PRICE` INT NULL COMMENT '产品价格，单位为分',
  `IS_GIFT` INT NULL DEFAULT 0 COMMENT '是否可以作为礼品发放,1表示可以,0表示不行.默认为0\n',
  `IMAGE1_URL` VARCHAR(256) NULL COMMENT '产品图像地址',
  `IMAGE2_URL` VARCHAR(256) NULL,
  `IMAGE3_URL` VARCHAR(256) NULL,
  `PRD_URL` VARCHAR(256) NULL COMMENT '产品链接',
  `METO` VARCHAR(128) NULL COMMENT '备注',
  `STATUS` INT NOT NULL DEFAULT 1 COMMENT '状态，0为无效，1为有效。默认为1\n后续可能有下架，无货等状态',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`PRODUCT_ID`),
  INDEX `IDX_PRODUCT_CATEGORYID` (`CATEGORY_ID` ASC)  ,
  INDEX `IDX_PRODUCT_NAME` (`NAME` ASC)  ,
  INDEX `IDX_PRODUCT_SELLERNICK` (`SELLER_NICK` ASC)   ,
  CONSTRAINT `fk_TB_PQ_PRODUCT_TB_PQ_CATEGORY1`
    FOREIGN KEY (`CATEGORY_ID`)
    REFERENCES  `TB_PRD_CATEGORY` (`CATEGORY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '产品信息，都是本平台自定义的产品信息';


--产品属性
CREATE TABLE IF NOT EXISTS `TB_PRD_PRTEXTATTR` (
  `PRT_EXTATTR_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '产品扩展属性值',
  `PRODUCT_ID` BIGINT(20) NOT NULL COMMENT '产品',
  `ATTR_VALUES` VARCHAR(20000) NULL COMMENT '属性值，表达方式为属性ID:属性值,  {attr1: v1, attr2:[v2_1,v2_2]}',
  PRIMARY KEY (`PRT_EXTATTR_ID`),
  UNIQUE INDEX `IDX_PRTEXTATTR_PRODUCTID` (`PRODUCT_ID` ASC),
  CONSTRAINT `fk_PRTEXTATTR_PRODUCT`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `TB_PRD_PRODUCT` (`PRODUCT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '产品扩展属性值';

-------------------------------------------------活动模块------------------------------------------------------------
--奖品类型
CREATE TABLE IF NOT EXISTS `TB_ACT_PRIZETYPE` (
  `PRIZETYPE_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '奖品类型ID',
  `PRIZETYPE_CODE` VARCHAR(16) NULL COMMENT '奖品类型CODE',
  `PRIZETYPE_UNIT` VARCHAR(16) NULL COMMENT '奖品类型的单位(例如：次、个、分、元)',
  `NAME` VARCHAR(64) NOT NULL COMMENT '奖品类型名称,比如红包,流量,话费等',
  `ICON` VARCHAR(128) NULL COMMENT '奖品类型图标',
  `TYPE` VARCHAR(8) NULL COMMENT '实物或虚拟物品类型, VIR:虚拟物品, GOODS:实物.',
  `METO` VARCHAR(128) NULL COMMENT '备注',
  `STATUS` INT NOT NULL COMMENT '状态，0：无效，1：有效',
  `PLATFORM` VARCHAR(250) NULL COMMENT '支撑的平台,主要平台有微信(WX), 淘宝(TAO)等,0表示不支持1表示支持 , \n{\"ALL\":1, \"WX\":0, \"TAO\":1}',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`PRIZETYPE_ID`),
  UNIQUE INDEX `INDEX_PRIZETYPE_CODE` (`PRIZETYPE_CODE` ASC))
ENGINE = InnoDB
COMMENT = '奖品类型\n';


--奖项
CREATE TABLE IF NOT EXISTS  `TB_ACT_PRIZEPOOL` (
  `PRIZEPOOL_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '奖池ID',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '卖家昵称',
  `NAME` VARCHAR(64) NOT NULL COMMENT '奖池名称',
  `EVERYDAY_AWARD` INT NULL COMMENT '每天每人的中奖次数\n',
  `TOTAL_AWARD` INT NULL COMMENT '每人总共的中奖次数\n',
  `IS_LIMIT` INT NOT NULL COMMENT '是否限制中奖数量 ，0：为不限制 ，1为限制',
  `DESCRIPTION` VARCHAR(25) NULL,
  `STATUS` INT NULL COMMENT '状态，0：无效，1：有效',
  `START_TIME` TIMESTAMP NULL COMMENT '奖池有效范围，起始时间',
  `END_TIME` TIMESTAMP NULL COMMENT '奖池有效范围：结束时间',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '奖池描述字段',
  PRIMARY KEY (`PRIZEPOOL_ID`))
ENGINE = InnoDB
COMMENT = '奖池\n';

--奖项
CREATE TABLE IF NOT EXISTS  `TB_ACT_PRIZEITEM` (
  `PRIZEITEM_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '奖项ID',
  `PRIZETYPE_ID` BIGINT(20) NOT NULL COMMENT '奖品类型\n',
  `PRIZEPOOL_ID` BIGINT(20) NOT NULL COMMENT '奖池\n',
  `PRODUCT_ID` BIGINT(20) NULL COMMENT '当奖品类型为实物,商家要从礼品表(商品表)中选择.',
  `NAME` VARCHAR(64) NOT NULL COMMENT '奖品名称',
  `METO` VARCHAR(256) NULL COMMENT '备注',
  `PRIZE_NUM` INT NOT NULL COMMENT '奖品数量\n',
  `REMIND_NUM` INT NOT NULL COMMENT '剩余奖品数量\n',
  `PRICE` INT NOT NULL COMMENT '奖品价格，单位为分',
  `RATE` INT NOT NULL COMMENT '中奖率',
  `STATUS` INT NOT NULL COMMENT '状态，0：无效，1：有效',
  `LIMIT_TYPE` INT NULL COMMENT '奖项发放限制类型，0为不限制，1为每天，2为每月，3为每年',
  `LIMIT_NUM` INT NULL COMMENT '奖项发放每日／每月／每年数量限制，0表示不限制。',
  `HOLD1` VARCHAR(64) NULL,
  `HOLD2` VARCHAR(64) NULL,
  `HOLD3` VARCHAR(64) NULL,
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`PRIZEITEM_ID`),
  INDEX `IDX_PRIZEITEM_PRIZETYPE` (`PRIZETYPE_ID` ASC),
  INDEX `IDX_PRIZEITEM_PRIZEPOOL` (`PRIZEPOOL_ID` ASC),
  CONSTRAINT `fk_PRIZEITEM_PRIZETYPE`
    FOREIGN KEY (`PRIZETYPE_ID`)
    REFERENCES  `TB_ACT_PRIZETYPE` (`PRIZETYPE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RIZEITEM_PRIZEPOOL`
    FOREIGN KEY (`PRIZEPOOL_ID`)
    REFERENCES  `TB_ACT_PRIZEPOOL` (`PRIZEPOOL_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '奖项\n';

--活动表
CREATE TABLE IF NOT EXISTS `TB_ACT_ACTIVITY` (
  `ACTIVITY_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '活动ID',
  `PRIZEPOOL_ID` BIGINT(20) NOT NULL,
  `ACTIVITY_NAME` VARCHAR(64) NOT NULL COMMENT '活动名称',
  `SERVICE_DEFINE_ID` INT NOT NULL COMMENT '业务服务,相当于一个业务插件.\n服务定义ＩＤ',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '活动创建人',
  `START_TIME` TIMESTAMP NOT NULL COMMENT '开始时间',
  `END_TIME` TIMESTAMP NOT NULL COMMENT '结束时间',
  `MEMBER_LIMIT` VARCHAR(8) NULL COMMENT '会员限制，0表示无限制，1表示会员，2表示非会员',
  `STATUS` INT NOT NULL COMMENT '状态，0为无效，1为生效\n',
  `RULES` VARCHAR(1024) NULL COMMENT '活动规则：{rule1:v1, rule2:v2}',
  `METO` VARCHAR(256) NULL COMMENT '备注',
  `HOLD1` VARCHAR(64) NULL COMMENT '备用一',
  `HOLD2` VARCHAR(64) NULL COMMENT '备用二',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  `UPDATE_PERSON` VARCHAR(64) NULL COMMENT '活动规则',
  `IS_EXPIRE_REMIND` INT NULL COMMENT '是否到期提醒，0为不提醒，1为提醒\n',
  PRIMARY KEY (`ACTIVITY_ID`),
  INDEX `IDX_ACTIVITY_PERSON` (`SELLER_NICK` ASC),
  INDEX `IDX_ACTIVITY_POOLID` (`PRIZEPOOL_ID` ASC),
  CONSTRAINT `fk_TB_ACT_ACTIVITY_TB_ACT_PRIZEPOOL1`
    FOREIGN KEY (`PRIZEPOOL_ID`)
    REFERENCES `TB_ACT_PRIZEPOOL` (`PRIZEPOOL_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '活动信息';

--参与活动记录
CREATE TABLE IF NOT EXISTS  `TB_ACT_ATTEND` (
  `ATTEND_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '参与活动记录ID',
  `BUYER_NICK` VARCHAR(128) NOT NULL COMMENT '活动参与人\n',
  `ACTIVITY_ID` BIGINT(20) NOT NULL COMMENT '活动ID',
  `ATTEND_TIME` TIMESTAMP NOT NULL COMMENT '参加活动时间',
  `IS_WIN` INT NOT NULL COMMENT '是否中奖，0:未中奖，1：中奖',
  `IS_AWARD` INT NULL COMMENT '是否派发，0：为没有，1为派发',
  `PRIZETYPE_CODE` VARCHAR(16) NULL COMMENT '获取的奖项类型',
  `PRIZEMITEM_ID` BIGINT(20) NULL COMMENT '获取的奖项，参见TB_ACT_PRIZEITEM表',
  `AWARD_NUM` INT NOT NULL COMMENT '奖品数量',
  `BACKFILL` VARCHAR(255) NULL COMMENT '用户中奖后的回填信息: {name:\"\", address:\"\",mobile:\"\"},可以自己填加.',
  `PARAM1` VARCHAR(64) NULL COMMENT '参数一',
  `PARAM2` VARCHAR(64) NULL COMMENT '参数二',
  `PARAM3` VARCHAR(45) NULL COMMENT '参数三',
  `HOLD1` VARCHAR(64) NULL COMMENT '备用字段',
  `HOLD2` VARCHAR(64) NULL COMMENT '备用字段',
  `METO` VARCHAR(128) NULL COMMENT '备注',
  `FAILURE_TIMES` INT NULL COMMENT '处理失败次数',
  `FAILURE_REASON` VARCHAR(128) NULL COMMENT '失败原因',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  `KEY_WORD` VARCHAR(32) NULL COMMENT '码串，或关键中奖依据',
  PRIMARY KEY (`ATTEND_ID`),
  INDEX `IDX_ATTENDRD_ACTIVITYID` (`ACTIVITY_ID` ASC),
  INDEX `IDX_ATTENDRD_BUYERNICK` (`BUYER_NICK` ASC),
  CONSTRAINT `fk_TB_ACT_ATTENDRD_TB_ACT_ACTIVITY1`
    FOREIGN KEY (`ACTIVITY_ID`)
    REFERENCES  `TB_ACT_ACTIVITY` (`ACTIVITY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '参与活动记录, 及结果处理.  BUYER_NICK会作为分';

--活动参与数据处理失败数据
CREATE TABLE IF NOT EXISTS  `TB_ACT_ATTENDRD_FAILURE` (
  `FAILURE_ID` INT NOT NULL AUTO_INCREMENT COMMENT '失败ID\n',
  `ACTIVITY_ID` BIGINT(20) NOT NULL COMMENT '活动ID',
  `ACTIVITY_NAME` VARCHAR(45) NULL COMMENT '活动名称',
  `BUYER_NICK` VARCHAR(45) NULL COMMENT '活动参与人',
  `FAILURE_REASON` VARCHAR(128) NULL COMMENT '失败原因',
  `FAILURE_TIMES` INT NULL COMMENT '失败次数',
  `ATTEND_ID` BIGINT(20) NOT NULL,
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '更新时间',
  PRIMARY KEY (`FAILURE_ID`))
ENGINE = InnoDB
COMMENT = '活动参与数据处理失败数据';

--活动参与次数
CREATE TABLE IF NOT EXISTS `TB_ACT_TIMES` (
  `TIMES_ID` INT NOT NULL AUTO_INCREMENT,
  `ACTIVITY_ID` BIGINT(20) NOT NULL,
  `BUYER_NICK` VARCHAR(128) NULL COMMENT '买家昵称',
  `TIMES` INT NULL COMMENT '买家参与活动允许的次数',
  `LIMIT_TYPE` INT NULL COMMENT '次数限制规则：0表示总次数，1表示每天次数。\n',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`TIMES_ID`),
  INDEX `fk_TB_ACT_TIMES_TB_ACT_ACTIVITY1_idx` (`ACTIVITY_ID` ASC),
  CONSTRAINT `fk_TB_ACT_TIMES_TB_ACT_ACTIVITY1`
    FOREIGN KEY (`ACTIVITY_ID`)
    REFERENCES `TB_ACT_ACTIVITY` (`ACTIVITY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '允许参与活动的次数' ;


--活动参与的商品
CREATE TABLE IF NOT EXISTS  `TB_ACT_PRODUCTS` (
  `ACT_PRODUCTS_ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `PRODUCT_ID` BIGINT(20) NULL COMMENT '活动产品ＩＤ\n',
  `PRODUCT_SRC` VARCHAR(64) NULL COMMENT '产品来源，OWNER：本平台  TAOBAO：淘宝，JD：京东',
  `ACTIVITY_ID` BIGINT(20) NOT NULL COMMENT '活动ＩＤ',
  PRIMARY KEY (`ACT_PRODUCTS_ID`),
  INDEX `IDX_PRODUCTS_ACTIVITY` (`ACTIVITY_ID` ASC),
  CONSTRAINT `fk_TB_ACT_PRODUCTS_TB_ACT_ACTIVITY1`
    FOREIGN KEY (`ACTIVITY_ID`)
    REFERENCES  `TB_ACT_ACTIVITY` (`ACTIVITY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '参与扫码活动的产品';


-------------------------------------------------会员模块------------------------------------------------------------
--买家信息
CREATE TABLE IF NOT EXISTS `TB_MEMBER_BUYER` (
  `BUYER_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '买家ID',
  `BUYER_NICK` VARCHAR(128) NOT NULL COMMENT '卖家昵称（混淆）',
  `REAL_NICK` VARCHAR(128) NULL COMMENT '真实昵称',
  `NAME` VARCHAR(64) NULL COMMENT '真实姓名',
  `TEL` VARCHAR(16) NULL COMMENT '电话',
  `MOBILE` VARCHAR(16) NULL COMMENT '手机',
  `EMAIL` VARCHAR(64) NULL COMMENT '邮箱',
  `QQ` VARCHAR(20) NULL COMMENT 'QQ',
  `CITY` VARCHAR(64) NULL COMMENT '城市，',
  `SEX` VARCHAR(8) NULL COMMENT '性别，F：女，M:男',
  `JOB` VARCHAR(64) NULL COMMENT '职业 ',
  `ADDRESS` VARCHAR(128) NULL COMMENT '地址',
  `HOLD1` VARCHAR(64) NULL COMMENT '备注1',
  `HOLD2` VARCHAR(64) NULL COMMENT '备注2',
  `STATUS` INT NULL COMMENT '状态：0为删除，1为有效，2为黑名单',
  `LAST_LOGIN_TIME` TIMESTAMP NULL COMMENT '最后登录时间',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`BUYER_ID`),
  UNIQUE INDEX `IDX_BUYER_NICK` (`BUYER_NICK` ASC))
ENGINE = InnoDB
COMMENT = '买家信息';

--买家动态
CREATE TABLE IF NOT EXISTS  `TB_MEMBER_DYNAMIC` (
  `DYNAMIC_ID` INT NOT NULL AUTO_INCREMENT COMMENT '会员动态',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '卖家昵称',
  `BUYER_NICK` VARCHAR(128) NULL COMMENT '买家昵称',
  `DESCRIPTION` VARCHAR(128) NULL COMMENT '动态描述',
  `CREATE_TIME` TIMESTAMP NULL COMMENT '创建时间',
  PRIMARY KEY (`DYNAMIC_ID`),
  INDEX `IDX_DYNAMIC_SELLERNICK` (`SELLER_NICK` ASC))
ENGINE = InnoDB
COMMENT = '会员动态';

--卖家信息
CREATE TABLE IF NOT EXISTS `TB_MEMBER_SELLER` (
  `SELLER_ID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '卖家ID',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '1：卖家账号，注册后不能修改，不能重复注册。\n2：候选主键。',
  `CODE` VARCHAR(32) NULL COMMENT '商家编码',
  `PWD` VARCHAR(32) NULL COMMENT '密码',
  `SEX` VARCHAR(8) NULL COMMENT '性别，值为F，M。默认为M。',
  `BIRTHDAY` DATE NULL COMMENT '生日，例如：2015－1－1',
  `AVATAR` VARCHAR(128) NULL COMMENT '卖家头像地址',
  `EMAIL` VARCHAR(128) NULL COMMENT '卖家邮箱',
  `QQ` VARCHAR(32) NULL COMMENT '卖家QQ\n',
  `LAST_LOGIN_TIME` TIMESTAMP NULL COMMENT '最后登录时间',
  `CREATE_TIME` TIMESTAMP NULL COMMENT '创建时间',
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '更新时间',
  PRIMARY KEY (`SELLER_ID`),
  UNIQUE INDEX `IDX_MEMBERSELLER_NICK` (`SELLER_NICK` ASC))
ENGINE = InnoDB
COMMENT = '平台卖家信息，第三方平台的卖家授权存储在';


--会员信息
CREATE TABLE IF NOT EXISTS  `TB_MEMBER_BUYERINFO` (
  `MEMBER_INFO_ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `MEMBER_CARD` VARCHAR(64) NULL,
  `BUYER_NICK` VARCHAR(128) NOT NULL COMMENT '买家昵称',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '卖家昵称',
  `RED_ENVELOPE` BIGINT(20) NULL COMMENT '会员红包总金额',
  `SET_POINTS` BIGINT(20) NULL COMMENT '会员集分宝总金额',
  `SCORE` BIGINT(20) NULL COMMENT '会员总积分(积水）等',
  `LOTTERY` BIGINT(20) NULL COMMENT '会员彩票总数',
  `PACKET_FLOW` BIGINT(20) NULL COMMENT '会员流量包总额',
  `COUPON` BIGINT(20) NULL COMMENT '会员优惠券总数',
  `STATUS` VARCHAR(8) NULL COMMENT '状态，0为无效，1为有效，默认为有效',
  `REFEREE` VARCHAR(128) NULL COMMENT '推荐人',
  `HOLD1` VARCHAR(64) NULL COMMENT '备注一',
  `HOLD2` VARCHAR(64) NULL COMMENT '备注二',
  `CREATE_TIME` TIMESTAMP NULL COMMENT '成为会员时间',
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '推荐人',
  INDEX `IDX_MEMBERINFO_BUYERNICK` (`BUYER_NICK` ASC),
  INDEX `IDX_MEMBERINFO_SELLERNICK` (`SELLER_NICK` ASC),
  UNIQUE INDEX `IDX_MEMBERINFO_UNIQUE` (`BUYER_NICK` ASC, `SELLER_NICK` ASC),
  PRIMARY KEY (`MEMBER_INFO_ID`),
  CONSTRAINT `fk_MEMBERINFO_MEMBERBUYER`
    FOREIGN KEY (`BUYER_NICK`)
    REFERENCES  `TB_MEMBER_BUYER` (`BUYER_NICK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEMBERNFO_MEMEBERSELLER`
    FOREIGN KEY (`SELLER_NICK`)
    REFERENCES  `TB_MEMBER_SELLER` (`SELLER_NICK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '买家会员信息';


--第三方平台会员映射
CREATE TABLE IF NOT EXISTS  `TB_MEMBER_BUYER_MAPPING` (
  `MAPPING_ID` INT NOT NULL AUTO_INCREMENT,
  `BUYER_NICK` VARCHAR(128) NOT NULL COMMENT '平台买家ID',
  `THIRD_SELLER_NICK` VARCHAR(128) NULL COMMENT '第三方平台卖家账号',
  `THIRD_SYSTEM_TYPE` VARCHAR(32) NOT NULL COMMENT '第三方平台类型，值为本平台：淘宝平台：TAOBAO，拍拍：PAIPAI',
  `THIRD_BUYER_NICK` VARCHAR(128) NULL COMMENT '第三方平台买家昵称',
  `THIRD_BUYER_ID` VARCHAR(128) NULL COMMENT '第三方平台买家ID\n',
  `CREATE_TIME` TIMESTAMP NULL,
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '买家对应的卖家昵称',
  PRIMARY KEY (`MAPPING_ID`),
  INDEX `IDX_BUYERMAPPING_BUYERID` (`BUYER_NICK` ASC),
  CONSTRAINT `fk_TB_MEMBER_BUYER_MAPPING_TB_MEMBER_BUYER1`
    FOREIGN KEY (`BUYER_NICK`)
    REFERENCES  `TB_MEMBER_BUYER` (`BUYER_NICK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '第三方平台会员映射';

--第三方平台的卖家授权信息, 本平台授权也在此表中
CREATE TABLE IF NOT EXISTS  `TB_MEMBER_SELLER_AUTH` (
  `AUTH_ID` INT NOT NULL AUTO_INCREMENT COMMENT '授权ID\n',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '平台卖家账号\n',
  `THIRD_SYSTEM_TYPE` VARCHAR(32) NOT NULL COMMENT '第三方授权平台类型，值为本平台：OWNER，淘宝平台：TAOBAO，拍拍：PAIPAI\n',
  `THIRD_SELLER_ID` VARCHAR(128) NULL COMMENT '第三方平台授权卖家账号ID\n',
  `THIRD_SELLER_NICK` VARCHAR(128) NULL COMMENT '第三方平台授权卖家昵称',
  `THIRD_SUB_SELLER_ID` VARCHAR(128) NULL COMMENT '第三方平台授权卖家子账号ID',
  `THIRD_SUB_SELLER_NICK` VARCHAR(128) NULL COMMENT '第三方平台授权卖家子账号昵称',
  `ACCESS_TOKEN` VARCHAR(128) NULL COMMENT '访问第三方平台API的令牌TOKEN\n',
  `TOKEN_TYPE` VARCHAR(64) NULL COMMENT 'TOKEN类型',
  `EXPIRES_IN` INT NULL COMMENT 'TOKEN过期时间，单位为秒',
  `REFRESH_TOKEN` VARCHAR(128) NULL COMMENT '刷新授权的TOKEN\n',
  `RE_EXPIRES_IN` INT NULL COMMENT '刷新TOKEN的过期时间，单位为秒',
  `R1_EXPIRES_IN` INT NULL COMMENT 'R1级别API的TOKEN过期时间',
  `R2_EXPIRES_IN` INT NULL COMMENT 'R2级别API的TOKEN过期时间',
  `W1_EXPIRES_IN` INT NULL COMMENT 'W1级别API的TOKEN过期时间',
  `W2_EXPIRES_IN` INT NULL COMMENT 'W2级别API的TOKEN过期时间',
  `CREATE_TIME` TIMESTAMP NULL COMMENT '创建时间',
  `UPDATE_TIME` TIMESTAMP NULL COMMENT '更新时间\n',
  PRIMARY KEY (`AUTH_ID`),
  INDEX `SELLER_AUTH_SELLERNICK` (`SELLER_NICK` ASC),
  CONSTRAINT `SELLER_AUTH_SELLERNICK`
    FOREIGN KEY (`SELLER_NICK`)
    REFERENCES  `TB_MEMBER_SELLER` (`SELLER_NICK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '卖家授权信息' ;

--卖家（商家） 三方平台的店铺信息， 本平台不支持开店。
CREATE TABLE IF NOT EXISTS  `TB_MEMBER_SHOP` (
  `SID` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '店铺编号',
  `SELLER_NICK` VARCHAR(128) NOT NULL COMMENT '店铺所有者卖家账号',
  `SHOP_ID` BIGINT(20) NULL COMMENT '第三方店铺ID\n',
  `HREF` VARCHAR(128) NULL COMMENT '第三方店铺链接\n',
  `THIRD_SYSTEM_TYPE` VARCHAR(32) NULL DEFAULT 'OWNER' COMMENT '店铺所在的第三方平台类型,值为本平台：OWNER，淘宝平台：TAOBAO，拍拍：PAIPAI\n',
  `TITLE` VARCHAR(128) NULL COMMENT '店铺标题',
  `PIC_PATH` VARCHAR(128) NULL COMMENT '店标地址\n',
  `CREATE_TIME` TIMESTAMP NULL COMMENT '开店时间',
  `UPDATE_TIME` TIMESTAMP NULL,
  PRIMARY KEY (`SID`),
  INDEX `IDX_SHOP_SELLERID` (`SELLER_NICK` ASC),
  CONSTRAINT `fk_TB_MEMBER_SHOP_TB_MEMEBER_SELLER1`
    FOREIGN KEY (`SELLER_NICK`)
    REFERENCES  `TB_MEMBER_SELLER` (`SELLER_NICK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '三方平台的店铺信息';